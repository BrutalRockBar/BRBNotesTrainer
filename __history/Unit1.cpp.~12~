//---------------------------------------------------------------------------
#include <vcl.h>
#pragma hdrstop
#include <mmsystem.h>
#include "Unit1.h"

//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
HMIDIIN In;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm1::FormCreate(TObject *Sender)
{
 MMRESULT rv;
 rv = midiInOpen(&In,0,(DWORD)midiCallback,0,CALLBACK_FUNCTION);
	if (rv != MMSYSERR_NOERROR) {
		ShowMessage("midiInOpen() failed...rv=%d" +rv);
	}

 midiInStart(In);
}
//---------------------------------------------------------------------------
void __fastcall TForm1::FormClose(TObject *Sender, TCloseAction &Action)
{
 midiInStop(In);
 midiInReset(In);
 midiInClose(In);
}
//---------------------------------------------------------------------------
void CALLBACK midiCallback(HMIDIIN hMidiIn, UINT wMsg, DWORD dwInstance, DWORD dwParam1, DWORD dwParam2)
{/*
 switch(wMsg) {
	case MIM_OPEN:
		Form1->Memo1->Lines->Add((AnsiString)"wMsg=MIM_OPEN\n");
		break;
	case MIM_CLOSE:
		Form1->Memo1->Lines->Add((AnsiString)"wMsg=MIM_CLOSE\n");
		break;
	case MIM_DATA:
		printf("wMsg=MIM_DATA, dwInstance=%08x, dwParam1=%08x, dwParam2=%08x\n", dwInstance, dwParam1, dwParam2);
		Form1->Memo1->Lines->Add((AnsiString) );
		break;
	case MIM_LONGDATA:
		printf("wMsg=MIM_LONGDATA\n");
		Form1->Memo1->Lines->Add((AnsiString) );
		break;
	case MIM_ERROR:
		printf("wMsg=MIM_ERROR\n");
		Form1->Memo1->Lines->Add((AnsiString) );
		break;
	case MIM_LONGERROR:
		printf("wMsg=MIM_LONGERROR\n");
		Form1->Memo1->Lines->Add((AnsiString) );
		break;
	case MIM_MOREDATA:
		printf("wMsg=MIM_MOREDATA\n");
		Form1->Memo1->Lines->Add((AnsiString) );
		break;
	default:
		printf("wMsg = unknown\n");
		Form1->Memo1->Lines->Add((AnsiString) );
		break;
	}
/*
 Form1->Memo1->Lines->Add((AnsiString)dwInstance);
 Form1->Memo1->Lines->Add((AnsiString)dwParam1);
 Form1->Memo1->Lines->Add((AnsiString)dwParam2);
 Form1->Memo1->Lines->Add((AnsiString)wMsg);
 Form1->Memo1->Lines->Add("-----");  */
}
//---------------------------------------------------------------------------

